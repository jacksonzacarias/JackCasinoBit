{"version":3,"sources":["assets/figure.png","assets/icon.svg","assets/logo.svg","components/form/textInput.jsx","components/list/getCryptoPrice.jsx","components/text/layout.jsx","components/text/footer.jsx","_services/request.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","useStyles","makeStyles","theme","card","minWidth","padding","breakpoints","down","textField","marginLeft","spacing","marginRight","typographyText","marginTop","margin","marginBottom","AddButton","withStyles","root","color","palette","getContrastText","deepOrange","backgroundColor","Fab","TextInputFormComponent","handleTextFieldChange","handleAddButtonClick","classes","Card","className","TextField","id","label","variant","onChange","onClick","Typography","display","gutterBottom","style","defaultProps","GetCryptoPriceList","displaySnackBarMessage","errorMessage","props","SnackbarContent","message","formatPrice","value","toLocaleString","currency","this","handleDeleteButtonClick","priceList","cryptoPriceList","length","map","price","priceKey","Object","keys","formattedPriceBRL","BRL","formattedPriceUSD","USD","formattedPriceEUR","EUR","key","src","Icon","alt","IconButton","Component","LayoutTextComponent","Logo","width","FooterTextComponent","getCryptoPriceList","requests","axios","get","then","response","data","App","state","input","JSON","parse","localStorage","getItem","prevState","setItem","stringify","setState","previousState","filter","request","getPriceListRequest","Response","getResponse","assign","concat","e","target","onDeleteButtonClick","Figure","onAddButtonClick","handleChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02602035.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/figure.50a6406b.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.64c89343.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.992a209e.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    minWidth: 270,\r\n    padding: 30,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minWidth: 230,\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  typographyText: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AddButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    \"&:hover\": {\r\n      backgroundColor: deepOrange[700],\r\n    },\r\n  },\r\n}))(Fab);\r\n\r\nexport default function TextInputFormComponent({\r\n  handleTextFieldChange,\r\n  handleAddButtonClick,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <TextField\r\n        id=\"outlined-helperText\"\r\n        label=\"CÓDIGO DE CRIPTOMOEDA\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={handleTextFieldChange}\r\n      />\r\n      <AddButton\r\n        variant=\"extended\"\r\n        color=\"primary\"\r\n        className={classes.margin}\r\n        onClick={handleAddButtonClick}\r\n      >\r\n        ADICIONAR\r\n      </AddButton>\r\n      <Typography\r\n        variant=\"caption\"\r\n        display=\"block\"\r\n        color=\"inherit\"\r\n        gutterBottom\r\n        style={{ color: \"#bdb0b0\" }}\r\n      >\r\n        \r\n        O uso deste serviço está sujeito aos termos e\r\n        <br />\r\n        condições\r\n      </Typography>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTextInputFormComponent.propTypes = {\r\n  handleTextFieldChange: PropTypes.func,\r\n  handleAddButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nTextInputFormComponent.defaultProps = {\r\n  handleTextFieldChange: () => {},\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Icon from \"../../assets/icon.svg\";\r\n\r\nimport \"./getCryptoPrice.scss\";\r\n\r\nclass GetCryptoPriceList extends Component {\r\n  displaySnackBarMessage = () => {\r\n    const { errorMessage } = this.props;\r\n    return (\r\n      <SnackbarContent\r\n        message={errorMessage}\r\n        style={{ backgroundColor: \"#4e2872\" }}\r\n        className=\"crypto-priceList-container-item\"\r\n      />\r\n    );\r\n  };\r\n\r\n  formatPrice = (value) => {\r\n    if (typeof value !== 'undefined') {\r\n      return value.toLocaleString(\"pt-BR\", {\r\n        style: \"currency\",\r\n        currency: \"BRL\",\r\n      });\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage, handleDeleteButtonClick, priceList } = this.props;\r\n    const cryptoPriceList =\r\n      errorMessage && priceList.length === 0\r\n        ? this.displaySnackBarMessage()\r\n        : priceList.map((price) => {\r\n            const keyObj = Object.keys(price);\r\n            const priceKey = keyObj[0];\r\n            const formattedPriceBRL = this.formatPrice(price[priceKey].BRL);\r\n            const formattedPriceUSD = this.formatPrice(price[priceKey].USD);\r\n            const formattedPriceEUR = this.formatPrice(price[priceKey].EUR);\r\n            \r\n            return (\r\n              <div key={price.id}>\r\n                <div className=\"crypto-priceList-container-item\">\r\n                  <img src={Icon} alt=\"icon\" />\r\n                  <div className=\"crypto-priceList-container-item-col\">\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                      {priceKey}\r\n                    </Typography>\r\n                    <div className=\"App-content-sub-details\">\r\n                    <p className=\"crypto-priceList-currency\">BRL: {formattedPriceBRL}</p>\r\n                    <p className=\"crypto-priceList-currency\">USD: {formattedPriceUSD}</p>\r\n                    <p className=\"crypto-priceList-currency\">EUR: {formattedPriceEUR}</p>\r\n                    </div>\r\n                  </div>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      handleDeleteButtonClick(price.id);\r\n                    }}\r\n                  >\r\n                    <CloseIcon className=\"crypto-priceList-container-item-close\" />\r\n                  </IconButton>\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            );\r\n          });\r\n    return <div className=\"crypto-priceList-container\">{cryptoPriceList}</div>;\r\n  }\r\n}\r\n\r\nexport default GetCryptoPriceList;\r\n\r\nGetCryptoPriceList.propTypes = {\r\n  errorMessage: PropTypes.string,\r\n  handleDeleteButtonClick: PropTypes.func.isRequired,\r\n  priceList: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.object, PropTypes.number])\r\n  ),\r\n};\r\n\r\nGetCryptoPriceList.defaultProps = {\r\n  errorMessage: \"\",\r\n  priceList: [],\r\n};\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Logo from \"../../assets/logo.svg\";\r\n\r\nexport default function LayoutTextComponent() {\r\n  return (\r\n    <div className=\"App-content-info-container\">\r\n      <img src={Logo} alt=\"logo\" />\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        style={{ width: \"100%\", marginTop: \"15%\" }}\r\n      >\r\n        Agora você pode rastrear todas as suas criptomoedas aqui!\r\n      </Typography>\r\n      <p className=\"App-content-info-paragraph\">\r\n        Basta digitar o código da criptomoeda no formulário à direita\r\n      </p>\r\n      <p className=\"App-content-info-mobile\">\r\n      Basta digitar o código da criptomoeda no formulário abaixo\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function FooterTextComponent() {\r\n  return (\r\n    <div className=\"App-footer\">\r\n      <Typography\r\n        variant=\"caption\"\r\n        display=\"block\"\r\n        color=\"inherit\"\r\n        gutterBottom\r\n        style={{ color: \"#bdb0b0\" }}\r\n      >\r\n        Bem-vindo ao JackBitcasino, o mais emocionante destino de jogos de azar licenciado, desenvolvido pelo\r\n\t      renomado empresário Jackson Antonio Zacarias Savoldi. Aqui, mergulhe em uma experiência única, onde \r\n\t      a emoção e a diversão se encontram em um ambiente luxuoso.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=\";\r\n\r\nfunction getCryptoPriceList(requests) {\r\n  return axios\r\n    .get(`${url}${requests}&tsyms=BRL,USD,EUR`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport default getCryptoPriceList;\r\n\r\n// imprimir o dado retornado\r\n","import React, { Component } from \"react\";\r\nimport Figure from \"./assets/figure.png\";\r\nimport TextInputFormComponent from \"./components/form/textInput\";\r\nimport GetCryptoPriceList from \"./components/list/getCryptoPrice\";\r\nimport LayoutTextComponent from \"./components/text/layout\";\r\nimport FooterTextComponent from \"./components/text/footer\";\r\n\r\nimport getCryptoPriceList from \"./_services/request\";\r\n\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      priceList: JSON.parse(localStorage.getItem(\"priceList\")) || [],\r\n      errorMessage: \"\",\r\n      id: JSON.parse(localStorage.getItem(\"id\")) || 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const { priceList } = this.state;\r\n    if (priceList !== prevState.priceList) {\r\n      localStorage.setItem(\"priceList\", JSON.stringify(priceList));\r\n    }\r\n  }\r\n\r\n  onDeleteButtonClick(id) {\r\n    this.setState((previousState) => ({\r\n      priceList: previousState.priceList.filter((request) => id !== request.id),\r\n    }));\r\n  }\r\n\r\n  onAddButtonClick() {\r\n    const { input } = this.state;\r\n    this.getPriceListRequest(input);\r\n  }\r\n\r\n  getPriceListRequest(input) {\r\n    getCryptoPriceList(input).then((response) => {\r\n      if (response.Response) {\r\n        return this.setState({\r\n          errorMessage:\r\n            \"Ops! Nenhum dado disponível tente novamente ou use letras maiúsculas como (por exemplo, BTC, NMC).\",\r\n          priceList: [],\r\n        });\r\n      }\r\n      const { id } = this.state;\r\n      const getResponse = Object.assign(response, { id: id + 1 });\r\n      localStorage.setItem(\"id\", JSON.stringify(getResponse.id));\r\n      return this.setState((previousState) => ({\r\n        id: getResponse.id,\r\n        priceList: previousState.priceList.concat(getResponse),\r\n      }));\r\n    });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ input: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage, priceList } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-layout\">\r\n          <div className=\"App-content\">\r\n            <div className=\"App-content-info\">\r\n              <LayoutTextComponent />\r\n              <GetCryptoPriceList\r\n                priceList={priceList}\r\n                handleDeleteButtonClick={(e) => this.onDeleteButtonClick(e)}\r\n                errorMessage={errorMessage}\r\n              />\r\n            </div>\r\n            <div className=\"App-content-center\">\r\n              <img src={Figure} alt=\"clown figure\" />\r\n            </div>\r\n            <div className=\"App-content-form\">\r\n              <TextInputFormComponent\r\n                handleAddButtonClick={(e) => this.onAddButtonClick(e)}\r\n                handleTextFieldChange={(e) => this.handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <FooterTextComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}